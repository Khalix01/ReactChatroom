{"version":3,"sources":["logo.svg","components/Chat.js","components/Join.js","components/InfoBar.js","components/Input.js","components/Message.js","components/Messages.js","App.js","index.js"],"names":["module","exports","socket","Join","useState","name","setName","room","setRoom","className","placeholder","type","onChange","event","target","value","onClick","preventDefault","alert","checkEmpty","to","InfoBar","href","Input","message","setMessage","sendMessage","onKeyPress","key","Message","user","text","isSentByCurrentUser","isAdmin","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Messages","messages","map","i","Chat","location","setMessages","SERVER","useEffect","queryString","parse","search","io","emit","off","on","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9ed14fcb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React , { useState, useEffect }from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport Infobar from './InfoBar.js'\nimport Input from './Input.js'\nimport Messages from './Messages.js'\n\nimport '../css/Chat.css'\n\nlet socket;\n\nconst Chat = ({location}) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst SERVER = 'https://react-chatroom-server.herokuapp.com/'\n\tuseEffect (() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\n\t\tsocket=io(SERVER);\n\n\t\tsetName(name);\n\t\tsetRoom(room);\n\t\tsocket.emit('join',{name:name,room:room},() => { });\n\n\t\treturn () => {\n\t\t\tsocket.emit('disconnect');\n\t\t\tsocket.off();\n\t\t}\n\t},[SERVER,location.search]);\n\n\tuseEffect(() => {\n\t\tsocket.on('message',(message)=>{\n\t\t\tsetMessages([...messages,message]);\n\t\t});\n\t}, [messages]);\n\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\n\t\tif(message) {\n\t\t\tsocket.emit('sendMessage', message, () => setMessage(''));\n\t\t}\n\t}\n\n\n\n\treturn(\n\t\t<div className=\"outerContainer\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<Infobar room={room}/>\n\t\t\t\t<Messages messages={messages} name={name} />\n\t\t\t\t<Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Chat ","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../css/Join.css'\n\nconst Join = () => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst checkEmpty = (event) => {\n    \tif((!name||!room)){\n    \t\tevent.preventDefault();\n    \t\talert(\"Username or Room ID is blank\");\n    \t}\n  \t}\n\treturn(\n\t\t<div className=\"joinOuterContainer\">\n\t\t\t<div className=\"joinInnerContainer\">\n\t\t\t\t<h1 className=\"heading\">Join</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder=\"Room\" className=\"joinInput\" type=\"text\" onChange={(event) => setRoom(event.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<Link onClick={event =>\tcheckEmpty(event)} to={`/ReactChatroom/chat?name=${name}&room=${room}`}>\n\t\t\t\t\t<button className='button' type=\"submit\">Sign In</button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Join","import React from 'react';\n\nimport '../css/Infobar.css';\n\nconst InfoBar = ({ room }) => (\n  <div className=\"infoBar\">\n    <div className=\"leftInnerContainer\">\n      <h3>{room}</h3>\n    </div>\n    <div className=\"rightInnerContainer\">\n      <a href=\"/ReactChatroom/\">close</a>\n    </div>\n  </div>\n);\n\nexport default InfoBar;","import React from 'react';\n\nimport '../css/Input.css';\n\nconst Input = ({message,setMessage,sendMessage}) => {\n\treturn (\n\t\t<form className='form'>\n\t\t\t<input\n\t\t\t\tclassName='input'\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder=\"say hi\"\n\t\t\t\tvalue={message}\n\t\t\t\tonChange={(event)=>setMessage(event.target.value)}\n\t\t\t\tonKeyPress={event => event.key === 'Enter' ? sendMessage(event):null}\n\t\t\t/>\n\t\t\t<button className='send' onClick={event => sendMessage(event)}>Send</button>\n\t\t</form>\n\t);\n};\n\nexport default Input","import React from 'react'\nimport ReactEmoji from 'react-emoji'\n\nimport '../css/Message.css';\n\nconst Message = ({message: {user,text},name}) => {\n\tlet isSentByCurrentUser = false, isAdmin=false;\n\tconst trimmedName = name.trim().toLowerCase();\n\tif(user === trimmedName) isSentByCurrentUser = true;\n\tif('admin' === user ) isAdmin = true;\n\tif(isSentByCurrentUser){\n\t\treturn(\n\t\t\t<div className=\"messageContainer justifyEnd\">\n\t\t\t\t<p className=\"sentText pr-10\">{trimmedName}</p>\n\t\t\t\t<div className=\"messageBox backgroundBlue\">\n\t\t\t\t\t<p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n\t\t\t\t</div>\n\t        </div>\n        );\n    }\n    else if(isAdmin){\n    \treturn(\n\t\t\t<div className=\"adminMessage\">\n\t\t\t\t<p className=\"adminText colorLight\">{ReactEmoji.emojify(text)}</p>\n\t\t\t</div>\n        );\n    }\n    else {\n    \treturn(\n\t\t\t<div className=\"messageContainer justifyStart\">\n\t\t\t\t<div className=\"messageBox backgroundLight\">\n\t\t\t\t\t<p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"sentText pl-10\">{user}</p>\n\t        </div>\n        );\n    }\n}; \n\nexport default Message","import React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport Message from './Message.js';\nimport '../css/Messages.css';\n\nconst Messages = (({messages,name}) => (\n\t<ScrollToBottom className=\"messages\">\n\t\t{messages.map((message, i) => <div key={i}><Message message={message} name={name}/></div>)}\n\t</ScrollToBottom>\n));\n\nexport default Messages","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Join from './components/Join'\nimport Chat from './components/Chat'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => (\n  <Router>\n    <Route path=\"/ReactChatroom/\" exact component={Join} />\n    <Route path=\"/ReactChatroom/chat\" component={Chat} />\n  </Router>\n);\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}