{"ast":null,"code":"var _jsxFileName = \"/home/khalix/Documents/ReactChatroom/client-side/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const SERVER = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(SERVER);\n    setName(name);\n    setRoom(room); //console.log(name,room);\n\n    socket.emit('join', {\n      name: name,\n      room: room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [SERVER, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log('here');\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/khalix/Documents/ReactChatroom/client-side/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","SERVER","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,MAAM,GAAG,gBAAf;AACAd,EAAAA,SAAS,CAAE,MAAM;AAChB,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AAEAb,IAAAA,MAAM,GAACD,EAAE,CAACY,MAAD,CAAT;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CANgB,CAOhB;;AACAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAI,EAACA,IAAN;AAAWE,MAAAA,IAAI,EAACA;AAAhB,KAAnB,EAAyC,MAAM,CAAG,CAAlD;AAEA,WAAO,MAAM;AACZL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACA,KAHD;AAIA,GAdQ,EAcP,CAACJ,MAAD,EAAQT,QAAQ,CAACW,MAAjB,CAdO,CAAT;AAgBAhB,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqBT,OAAD,IAAW;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACA,KAFD;AAGA,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT;;AAMA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAGd,OAAH,EAAY;AACXP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACA;AACD,GAND;;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAoBE,QAApB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,KAAK,EAAEF,OADR;AAEC,IAAA,QAAQ,EAAGW,KAAD,IAASV,UAAU,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd,CAF9B;AAGC,IAAA,UAAU,EAAEL,KAAK,IAAIA,KAAK,CAACM,GAAN,KAAc,OAAd,GAAwBP,WAAW,CAACC,KAAD,CAAnC,GAA2C,IAHjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD;AAWA,CAjDD;;AAmDA,eAAejB,IAAf","sourcesContent":["import React , { useState, useEffect }from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = ({location}) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst SERVER = 'localhost:5000'\n\tuseEffect (() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\n\t\tsocket=io(SERVER);\n\n\t\tsetName(name);\n\t\tsetRoom(room);\n\t\t//console.log(name,room);\n\t\tsocket.emit('join',{name:name,room:room},() => { });\n\n\t\treturn () => {\n\t\t\tsocket.emit('disconnect');\n\t\t\tsocket.off();\n\t\t}\n\t},[SERVER,location.search]);\n\n\tuseEffect(() => {\n\t\tsocket.on('message',(message)=>{\n\t\t\tsetMessages([...messages,message]);\n\t\t});\n\t},[messages]);\n\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log('here')\n\t\tif(message) {\n\t\t\tsocket.emit('sendMessage', message, () => setMessage(''));\n\t\t}\n\t}\n\n\tconsole.log(message,messages);\n\n\treturn(\n\t\t<div className=\"outerContainer\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<input\n\t\t\t\t\tvalue={message}\n\t\t\t\t\tonChange={(event)=>setMessage(event.target.value)}\n\t\t\t\t\tonKeyPress={event => event.key === 'Enter' ? sendMessage(event):null}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Chat "]},"metadata":{},"sourceType":"module"}