{"ast":null,"code":"var _jsxFileName = \"/home/khalix/Documents/ReactChatroom/client-side/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const SERVER = 'localhost:5000';\n  useEffect(() => {\n    const data = queryString.parse(location.search);\n    console.log(location.search);\n    console.log(data);\n    socket = io(SERVER); //setName(n);\n    //setRoom(r);\n    //console.log(n,r);\n    //socket.emit('join',{name:name,room:room});\n  }, [SERVER, location.search]);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, \"Chat\");\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/khalix/Documents/ReactChatroom/client-side/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","SERVER","data","parse","search","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,MAAM,GAAG,gBAAf;AACAV,EAAAA,SAAS,CAAE,MAAM;AAChB,UAAMW,IAAI,GAAGV,WAAW,CAACW,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACQ,MAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAR,IAAAA,MAAM,GAACD,EAAE,CAACQ,MAAD,CAAT,CANgB,CAQhB;AACA;AACA;AACA;AACA,GAZQ,EAYP,CAACA,MAAD,EAAQL,QAAQ,CAACQ,MAAjB,CAZO,CAAT;AAeA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAGA,CAtBD;;AAwBA,eAAeT,IAAf","sourcesContent":["import React , { useState, useEffect }from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = ({location}) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst SERVER = 'localhost:5000'\n\tuseEffect (() => {\n\t\tconst data = queryString.parse(location.search);\n\n\t\tconsole.log(location.search);\n\t\tconsole.log(data);\n\n\t\tsocket=io(SERVER);\n\n\t\t//setName(n);\n\t\t//setRoom(r);\n\t\t//console.log(n,r);\n\t\t//socket.emit('join',{name:name,room:room});\n\t},[SERVER,location.search]);\n\n\n\treturn(\n\t\t<h1>Chat</h1>\n\t)\n};\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}