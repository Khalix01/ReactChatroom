{"ast":null,"code":"var _jsxFileName = \"/home/khalix/Documents/ReactChatroom/client-side/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = location => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const SERVER = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(SERVER);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name: name,\n      room: room\n    });\n  }, [SERVER, location.search]);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, \"Chat\");\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/khalix/Documents/ReactChatroom/client-side/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","SERVER","parse","search","emit"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,QAAD,IAAc;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,MAAM,GAAG,gBAAf;AACAV,EAAAA,SAAS,CAAE,MAAM;AAChB,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAvB;AAEAT,IAAAA,MAAM,GAACD,EAAE,CAACQ,MAAD,CAAT;AAEAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAmB;AAACP,MAAAA,IAAI,EAACA,IAAN;AAAWE,MAAAA,IAAI,EAACA;AAAhB,KAAnB;AACA,GATQ,EASP,CAACE,MAAD,EAAQL,QAAQ,CAACO,MAAjB,CATO,CAAT;AAYA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAGA,CAnBD;;AAqBA,eAAeR,IAAf","sourcesContent":["import React , { useState, useEffect }from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = (location) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst SERVER = 'localhost:5000'\n\tuseEffect (() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\n\t\tsocket=io(SERVER);\n\n\t\tsetName(name);\n\t\tsetRoom(room);\n\n\t\tsocket.emit('join',{name:name,room:room});\n\t},[SERVER,location.search]);\n\n\n\treturn(\n\t\t<h1>Chat</h1>\n\t)\n};\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}